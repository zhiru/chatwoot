services:
  base: 
    build:
      context: ..
      dockerfile: .devcontainer/Dockerfile.base
      args:
        VARIANT: "ubuntu-22.04"
        NODE_VERSION: "20.9.0"
        RUBY_VERSION: "3.3.3"
        # On Linux, you may need to update USER_UID and USER_GID below if not your local UID is not 1000.
        USER_UID: "1000"
        USER_GID: "1000"
    image: base:latest
        
  app:      
    env_file:
      - ../.env

    build:
      context: ..
      dockerfile: .devcontainer/Dockerfile
      args:
        VARIANT: "ubuntu-22.04"
        NODE_VERSION: "20.9.0"
        RUBY_VERSION: "3.3.3"
        # On Linux, you may need to update USER_UID and USER_GID below if not your local UID is not 1000.
        USER_UID: "1000"
        USER_GID: "1000"
        REPOSITORY_OWNER: ${REPOSITORY_OWNER:-aireset}
        REPOSITORY_TAG: ${REPOSITORY_TAG:-latest}

    volumes:
      - ..:/workspace:cached

    depends_on:
      - base
      - db
      - redis

    # Overrides default command so things don't shut down after the process ends.
    command: sleep infinity

    # Runs app on the same network as the database container, allows "forwardPorts" in devcontainer.json function.
    network_mode: service:db

  db:
    image: postgres:latest
    restart: unless-stopped
    ports:
      - "5432:5432"  # Expondo a porta do PostgreSQL
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: postgres
      POSTGRES_DB: postgres
      POSTGRES_PASSWORD: postgres
      PGOPTIONS: '-c listen_addresses=*'

  redis:
    image: redis:latest
    restart: unless-stopped
    command: redis-server --bind 0.0.0.0
    ports:
      - "6379:6379"  # Expondo a porta do Redis
    volumes:
      - redis-data:/data

  mailhog:
    restart: unless-stopped
    image: mailhog/mailhog
    network_mode: service:db

volumes:
  postgres-data:
  redis-data:
